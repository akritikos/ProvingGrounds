<Project>
	<PropertyGroup Label="Project">
		<!-- Prepend organization name to default namespace -->
		<RootNamespace>Kritikos.$(MSBuildProjectName)</RootNamespace>
		<!-- Generate documentation file and ignore warnings for undocumented elements -->
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<NoWarn>1591</NoWarn>
		<!-- Error out upon trying to package projects marked as not packable -->
		<WarnOnPackingNonPackableProject>true</WarnOnPackingNonPackableProject>
		<!-- Disable warnings on preview SDK versions -->
		<SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
		<!-- We only target a single framework hence the subdir is not needed -->
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<!-- Same but for runtime assemblies -->
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<!-- Enable lock files -->
		<RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
		<!-- Disable nugets from SDK fallback folders -->
		<DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
		<!-- Enable nullable context by default -->
		<Nullable>enable</Nullable>
		<!-- Enable .NET 5+ native analyzers -->
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<!-- Use latest stable language features -->
		<AnalysisLevel>latest</AnalysisLevel>
		<LangVersion>latest</LangVersion>
		<Nullable>enable</Nullable>
	</PropertyGroup>

	<!-- Set automated build variable -->
	<PropertyGroup Label="CI Build">
		<!-- https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#system-variables -->
		<ContinuousIntegrationBuild Condition="'$(TF_BUILD)' == 'true'">True</ContinuousIntegrationBuild>

		<!-- https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables -->
		<ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">True</ContinuousIntegrationBuild>

		<!-- https://docs.gitlab.com/ee/ci/variables/predefined_variables.html -->
		<ContinuousIntegrationBuild Condition="'$(GITLAB_CI)' == 'true'">True</ContinuousIntegrationBuild>
	</PropertyGroup>

	<!-- Restore only locked nuget packages on automated builds -->
	<PropertyGroup Label="CI" Condition="'$(ContinuousIntegrationBuild)' == 'true'">
		<RestoreLockedMode>true</RestoreLockedMode>
	</PropertyGroup>

	<!-- Enable custom nesting for files -->
	<ItemGroup>
		<ProjectCapability Include="DynamicFileNesting" />
		<ProjectCapability Include="DynamicDependentFile" />
	</ItemGroup>

	<!-- Use submodule .NET ruleset for analyzers -->
	<PropertyGroup Label="Code Analysis Ruleset" Condition="Exists('$(MSBuildThisFileDirectory)\.config\dotnet.ruleset')">
		<CodeAnalysisRuleset>$(MSBuildThisFileDirectory)\.config\dotnet.ruleset</CodeAnalysisRuleset>
	</PropertyGroup>

	<!-- Use submodule stylecop configuration -->
	<ItemGroup Label="Code Analysis Configuration" Condition="Exists('$(MSBuildThisFileDirectory)\.config\stylecop.json')">
		<AdditionalFiles Include="$(MSBuildThisFileDirectory)\.config\stylecop.json" Link="stylecop.json" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'" Label="Debug Settings">
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Label="Package">
		<PackageId></PackageId>
		<Company>Kritikos IO</Company>
		<Authors>Alexandros Kritikos</Authors>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
	</PropertyGroup>

	<ItemGroup Label="Nugets" Condition="!$(MSBuildProjectFullPath.Contains('tests'))">
		<PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.3.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SerilogAnalyzer" Version="0.15.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SmartanAlyzers.ExceptionAnalyzer" Version="1.0.10">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
		<PackageReference Include="SmartAnalyzers.MultithreadingAnalyzer" Version="1.1.31">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Label="SourceLink" Condition="'$(IsPackable)' == 'true'">
		<PackageReference Include="Microsoft.SourceLink.Bitbucket.Git" Version="1.0.0" PrivateAssets="All"/>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
		<PackageReference Include="Microsoft.SourceLink.GitLab" Version="1.0.0" PrivateAssets="All"/>

		<SourceLinkGitLabHost Include="git.kritikos.io" />
		<SourceLinkGitHubHost Include="github.com" />
		<SourceLinkBitBucketHost Include="bitbucket.org" />
	</ItemGroup>

	<ItemGroup Label="TestCoverage" Condition="$(MSBuildProjectFullPath.Contains('tests'))">
		<PackageReference Include="coverlet.msbuild" Version="2.9.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Label="License Import" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
		<None Include="$(MSBuildThisFileDirectory)\LICENSE.md" Pack="true" PackagePath="" />
	</ItemGroup>

	<PropertyGroup Label="License" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
	</PropertyGroup>
</Project>
