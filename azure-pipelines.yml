trigger:
  branches:
    include:
      - master
      - develop
      - feature/*
      - bugfix/*

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  BuildPlatform: Any CPU
  BuildConfiguration: Release
  ToolPath: '$Pipeline.Workspace/tools'

jobs:
- job: Setup
  pool:
    vmImage: ubuntu-latest

  steps:
  - task: DotNetCoreCLI@2
    name: dotnetRestore
    displayName: Restoring nugets
    inputs:
      command: 'restore'
      arguments: -Project2ProjectTimeOut 20 --packages "$Pipeline.Workspace/.nuget"
      verbosityRestore: Normal

  - powershell: |
      dotnet tool install gitversion.tool --tool-path "$Pipeline.Workspace/tools"
    displayName: Installing Dotnet Tools

  - powershell: |
      echo $ToolPath
      $gitVersion = $(ToolPath)/dotnet-gitversion /output json /showvariable NugetVersion
      echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]$gitVersion"
      echo "Environment version is: $Version"
      echo "Git version is: $gitVersion"
    name: versioning
    displayName: Setting version from git

- job: Building
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Setup
  variables:
    Version: $[dependencies.Setup.outputs['versioning.Version']]
  steps:
  - checkout: self
    fetchDepth: 1
    submodules: recursive
  - task: DotNetCoreCLI@2
    name: dotnetRestore
    displayName: Restoring nugets
    inputs:
      command: 'restore'
      arguments: -Project2ProjectTimeOut 20 --packages $Pipeline.Workspace/.nuget
      verbosityRestore: Normal

  - task: DotNetCoreCLI@2
    name: dotnetBuild
    displayName: Building Projects
    inputs:
      command: build
      configuration: $(BuildConfiguration)
      arguments: --no-restore
      projects: src/*/*.csproj

- job: Testing
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Setup

- job: Publishing
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Building
    - Testing
  steps:
  - powershell: |
      echo "Version is: $Version"
