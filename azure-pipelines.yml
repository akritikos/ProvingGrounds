resources:
  repositories:
    - repository: self
      checkoutOptions:
        submodules: true
        lfs: true
trigger:
  batch: true
  branches:
    include:
      - master
      - develop
      - feature/*
      - bugfix/*
      - release/*
  paths:
    include:
      - azure-pipelines.yml
      - src/*
      - tests/*
variables:
  - group: DotNet
  - group: Environment
  - group: ApiKeys
  - name: SONAR_PROJECT
    value: akritikos_ProvingGrounds
pool:
      vmImage: ubuntu-latest
stages:
  - stage: Version
    displayName: Calculates semantic version
    jobs:
      - template: .config/ci/general/gitversion.yml
  - stage: Build
    displayName: Builds artifacts
    dependsOn: Version
    jobs:
      - job: Build
        steps:
          - checkout: self
            fetchDepth: 1
          - template: .config/ci/dotnet/nuget-cache.yml
          - template: .config/ci/dotnet/restore.yml
          - template: .config/ci/dotnet/build.yml
          - template: .config/ci/dotnet/publish.yml
          - template: .config/ci/general/publish.yml
            parameters:
              artifactName: $(Build.Repository.Name)-$(Build.SourceVersion)
          - template: .config/ci/dotnet/pack.yml
          - template: .config/ci/general/publish.yml
            parameters:
              artifactName: pack
              pathtoPublish: $(build.artifactStagingDirectory)/nuget
  - stage: Test
    displayName: Runs unit tests and coverage collection
    dependsOn: Version
    jobs:
      - job: Test
        steps:
          - template: .config/ci/dotnet/nuget-cache.yml
          - template: .config/ci/dotnet/restore.yml
          - template: .config/ci/dotnet/coverage-tools.yml
          - template: .config/ci/general/sonar-scanner.yml
          - template: .config/ci/dotnet/test.yml
          - template: .config/ci/general/sonar-scanner-publish.yml
          - template: .config/ci/dotnet/coverage-upload.yml
  - stage: PublishCI
    displayName: Publishes nuget to nightly feed
    dependsOn:
    - Build
    condition: succeeded()
    jobs:
      - deployment: KritikosIO
        displayName: Push nuget to Kritikos IO
        environment: kritikos-io
        strategy:
          runOnce:
            deploy:
              steps:
              - task: DotNetCoreCLI@2
                displayName: Push Nugets
                inputs:
                  workingDirectory: $(build.artifactStagingDirectory)/nuget
                  command: 'custom'
                  custom: 'nuget'
                  arguments: >
                    push *.nupkg
                    -s $(KritikosNuget)
                    -k $(KritikosApiKey)
  - stage: PublishRelease
    displayName: Publishes release nuget
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn:
      - PublishCI
      - Test

