trigger:
  branches:
    include:
      - master
      - develop
      - feature/*
      - bugfix/*

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  BuildPlatform: Any CPU
  BuildConfiguration: Release

jobs:
- job: Setup
  pool:
    vmImage: ubuntu-latest

  steps:
  # - task: DotNetCoreCLI@2
  #   name: dotnetRestore
  #   displayName: Restoring nugets
  #   inputs:
  #     command: 'restore'
  #     arguments: -Project2ProjectTimeOut 20 --packages "$Pipeline.Workspace/.nuget"
  #     verbosityRestore: Normal

  - powershell: |
      dotnet tool install --tool-path .. gitversion.tool
    displayName: Installing Dotnet Tools

  - powershell: |
      $git = $(../dotnet-gitversion /output json /showvariable NugetVersion)
      echo "##vso[task.setvariable variable=gitVersion;isOutput=true]$(../dotnet-gitversion /output json /showvariable NugetVersion)"
      echo "Environment version is: $gitVersion"
      echo "Git version is: $git"
    name: versioning
    displayName: Setting version from git

- job: Building
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Setup
  variables:
    gitVersion: $[dependencies.Setup.outputs['versioning.gitVersion']]
  steps:
  - checkout: self
    fetchDepth: 1
    submodules: recursive
  # - task: DotNetCoreCLI@2
  #   name: dotnetRestore
  #   displayName: Restoring nugets
  #   inputs:
  #     command: 'restore'
  #     arguments: -Project2ProjectTimeOut 20 --packages $Pipeline.Workspace/.nuget
  #     verbosityRestore: Normal

  # - task: DotNetCoreCLI@2
  #   name: dotnetBuild
  #   displayName: Building Projects
  #   inputs:
  #     command: build
  #     configuration: $(BuildConfiguration)
  #     arguments: --no-restore
  #     projects: src/*/*.csproj

- job: Testing
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Setup
  variables:
    gitVersion: $[dependencies.Setup.outputs['versioning.gitVersion']]
  steps:
  - checkout: self
    fetchDepth: 1
    submodules: recursive
  - powershell: |
      echo "Version is: $gitVersion"

- job: Publishing
  pool:
    vmImage: ubuntu-latest
  dependsOn:
    - Setup
    - Building
    - Testing
  variables:
    gitVersion: $[dependencies.Setup.outputs['versioning.gitVersion']]
  steps:
  - checkout: none
  - powershell: |
      echo "Version is: $gitVersion"
