steps:
- ${{  if ne(variables['Build.Reason'], 'PullRequest') }}:
  - pwsh: |
      ../dotnet-sonarscanner begin /k:"${{ variables.SONAR_PROJECT }}" /v:"${{ variables.Build.BuildNumber }}" /o:"${{ variables.SONAR_ORG }}" /d:sonar.host.url="${{ variables.SONAR_URL }}" /d:sonar.login="${{ variables.SONAR_KEY }}" /d:sonar.cs.opencover.reportsPaths="${{ variables.build.artifactStagingDirectory }}/coverage/coverage.opencover.xml" /d:sonar.branch.name="${{ variables.Build.SourceBranchName }}" /d:sonar.github.repository="${{ variables.Build.Repository.Name }}" /d:sonar.github.oauth=${{ variables.GITHUB_KEY }}
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: SonarCloud (CI)
- ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
  - pwsh: |
      ../dotnet-sonarscanner begin /k:"${{ variables.SONAR_PROJECT }}" /v:"${{ variables.Build.BuildNumber }}" /o:"${{ variables.SONAR_ORG }}" /d:sonar.host.url="${{ variables.SONAR_URL }}" /d:sonar.login="${{ variables.SONAR_KEY }}" /d:sonar.cs.opencover.reportsPaths="${{ variables.build.artifactStagingDirectory }}/coverage/coverage.opencover.xml" /d:sonar.branch.name="${{ variables.Build.SourceBranchName }}" /d:sonar.github.repository="${{ variables.Build.Repository.Name }}" /d:sonar.github.oauth=${{ variables.GITHUB_KEY }} /d:sonar.pullrequest.key="${{ variables.System.PullRequest.PullRequestId }}" /d:sonar.pullrequest.provider="github"
    condition: eq(variables['Build.Reason'], 'PullRequest')
    displayName: SonarCloud (Pull Request)
